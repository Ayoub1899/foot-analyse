import streamlit as st
import requests
import tempfile
import os

API_URL = "http://localhost:8000/upload/"  # URL de l'API FastAPI
DOWNLOAD_BASE_URL = "http://localhost:8000/download/"  # URL de base pour t√©l√©charger la vid√©o annot√©e

st.title("D√©tection de joueurs, d'arbitres et du ballon en temps r√©el ‚öΩ")

# Ajout d'une section tutoriel
st.sidebar.title("üìò Guide d'utilisation")
st.sidebar.markdown("""
**Comment utiliser cette application :**

1. **T√©l√©versez une vid√©o** :
   - Cliquez sur le bouton "Browse files".
   - S√©lectionnez une vid√©o au format MP4, AVI, MOV ou MKV.

2. **D√©marrez la d√©tection** :
   - Une fois la vid√©o t√©l√©vers√©e, cliquez sur le bouton "D√©marrer la d√©tection".
   - Le traitement peut prendre quelques minutes, soyez patient.

3. **T√©l√©chargez la vid√©o annot√©e** :
   - Une fois le traitement termin√©, un lien de t√©l√©chargement appara√Ætra.
   - Cliquez sur le lien pour t√©l√©charger la vid√©o annot√©e.

**Remarque** : Assurez-vous que la vid√©o contient des joueurs et un ballon pour des r√©sultats optimaux.
""")

uploaded_file = st.file_uploader("Uploader une vid√©o", type=["mp4", "avi", "mov", "mkv"])

if uploaded_file is not None:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp4") as temp_file:
        temp_file.write(uploaded_file.read())
        temp_file_path = temp_file.name

    if st.button("D√©marrer la d√©tection"):
        st.text("Le traitement peut prendre plusieurs minutes, veuillez patienter...")
        with st.spinner("Analyse de la vid√©o..."):
            files = {"file": open(temp_file_path, "rb")}
            response = requests.post(API_URL, files=files)
            files["file"].close()
            os.remove(temp_file_path)  # Supprimer le fichier temporaire apr√®s envoi

            if response.status_code == 200:
                result_filename = response.json().get("result")  # R√©cup√©rer le nom du fichier annot√©
                if result_filename:
                    download_url = f"{result_filename}"  # Construire l'URL de t√©l√©chargement

                    st.success("D√©tection termin√©e avec succ√®s !")

                    # Bouton de t√©l√©chargement
                    st.markdown(f"[üì• T√©l√©charger la vid√©o annot√©e]({download_url})", unsafe_allow_html=True)
                else:
                    st.error("Le nom du fichier annot√© est introuvable.")
            else:
                st.error("Erreur lors du traitement de la vid√©o.")